package chap08.sec07.exam01_why_default_method;

public interface MyInterface {

	public void method1();
	
	/*
	 * =============================================================
	 * 디폴트 메서드를 사용하는 이유
	 * =============================================================
	 * 디폴트 메서드는 기존(이미 만들어서 활용중인) 인터페이스를 확장해서 새로운 기능을 추가하기 위함이다.
	 * 어떤 인터페이스가 추상 메서드 1, 2, 3을 갖고 있고, 이를 클래스 A, B, C, D, E, F, G가 구현하고 있다고 할 때
	 * 만약 이 인터페이스에 기능으 추가할 필요가 있어서 추상 메서드를 추가하면,
	 * 이를 구현한 클래스 A~G에서 컴파일 오류가 발생하고, 모든 클래스에서 새로 추가한 메서드를 재정의 해야 하는 번거로움이 생긴다.
	 * => 인터페이스 확장의 어려움
	 * 
	 * 디폴트 메서드는 인터페이스에 실행 블럭을 작성하고, 이를 구현한 클래스에서 '필요에 따라' 재정의를 할 수 있다.
	 * 따라서 위의 예시의 경우에 새로운 기능을 디폴트 메서드로 작성하고, 
	 * 이를 구현한 새로운 클래스 H를 만들어 새로운 기능을 사용하면 된다.
	 * 이때 이미 존재하는 클래스 A~G에서는 추가적인 재정의 작업을 할 필요가 없다.
	 * */
	public default void method2() {
		System.out.println("디폴트 메서드인 method2()는 재정의하여 사용");
	}
}
