package chap07.sec02_inheritance;

public class B_Student extends B_People {
	
	public int studentNo;

	/*
	 * =============================================================
	 * super()를 통한 부모 생성자 호출
	 * =============================================================
	 * 자기 객체 생성자 호출 this()와 비슷하게 하위 클래스에서는 객체를 생성할 때 상위 클래스 객체를 먼저 생성한다.
	 * 논리적으로 상위 클래스 객체가 먼저 있어야 멤버도 상속 받을 수 있기 때문이다.
	 * 
	 * 그렇기 때문에 하위 클래스 객체의 생성자의 실행 블록 첫 줄에는 항상 부모 생성자 호출 명령문이 들어가야 한다.
	 * 그리고 이때 쓰이는 명령문이 super()이다.
	 * 
	 * 상위 클래스에 개발자가 임의로 생성자 정의를 하지 않았다면, 컴파일러가 자동으로 상위 클래스의 기본 생성자를 만들고, 하위 클래스 생성자의 첫줄에 super()를 넣는다.
	 * 하지만 만약 개발자가 임의로 생성자를 정의했다면, 컴파일러는 상위 클래스의 기본 생성자를 만들지 않기 때문에, 개발자가 하위 클래스 생성자 첫출에 super([매개변수])를 명시해줘야 한다. 
	 * */
	
	/*
	 * 클래스 People을 상속한 클래서 Student
	 * 상위 클래스에서 임의로 매개 변수를 받는 생성자를 명시했기 때문에 기본 생성자가 없다.
	 * 따라서 개발자는 Student의 생성자 첫줄에 People의 생성자를 호출해줘야 한다.
	 * 방법은 super([매개변수])
	 * */
	public B_Student(String name, String ssn, int studentNo) {
		super(name, ssn);
		this.studentNo = studentNo;
		System.out.println("자식 객체 생성 완료");
	}
}
